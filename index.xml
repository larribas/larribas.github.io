<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Lorenzo Arribas</title>
    <link>https://larribas.me/</link>
    <description>Recent content on Lorenzo Arribas</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 22 Feb 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://larribas.me/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>The identity of a Microservice</title>
      <link>https://larribas.me/posts/the-identity-of-a-microservice/</link>
      <pubDate>Sat, 22 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://larribas.me/posts/the-identity-of-a-microservice/</guid>
      <description>Little boxes on the hillside&amp;hellip;  My current company is undergoing a transition to microservices. This is a new challenge for the company since, until this point, all our processes and tooling revolve around a monolith, shaped by all the decisions we made in the past (the good ones and the bad ones).
The way we decided to start is by migrating one single component into a microservice, and laying down a “golden path” for other services to follow.</description>
    </item>
    
    <item>
      <title>Paving the way for distributed asynchronous tasks</title>
      <link>https://larribas.me/posts/paving-the-way-for-distributed-asynchronous-tasks/</link>
      <pubDate>Fri, 25 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://larribas.me/posts/paving-the-way-for-distributed-asynchronous-tasks/</guid>
      <description>Source: http://sarahrussellpottery.com/galleries/clocks/  In a previous article, we discussed the dispatching system we use at Glovo to find the best courier to deliver each order.
To recap, we have a service named Jarvis. Every few seconds, Jarvis retrieves the current state of the city and makes a series of decisions based on mathematical models and optimisation algorithms. We can think of it as N tasks running periodically, where N is the number of cities.</description>
    </item>
    
    <item>
      <title>Meaningful web service /health checks</title>
      <link>https://larribas.me/posts/meaningful-web-service-health-checks/</link>
      <pubDate>Thu, 03 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://larribas.me/posts/meaningful-web-service-health-checks/</guid>
      <description>About 10 years ago, I deployed my first web service. It was a nice, silly PHP application to store game cheat sheets. Interestingly, what made me really proud about it was the fact that I was able to release new versions with a single command, with a weird mix of git hooks and rsync-powered bash scripts.
When I think about the massive transformation that our field has undergone in the last few years in terms of continuous delivery and service orchestration, I always come back to that memory, and I can&amp;rsquo;t help laughing a bit.</description>
    </item>
    
    <item>
      <title>Migrating Glovo’s dispatching service from a single machine to a distributed system</title>
      <link>https://larribas.me/posts/migrating-glovos-dispatching-service-from-a-single-machine-to-a-distributed-system/</link>
      <pubDate>Tue, 20 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://larribas.me/posts/migrating-glovos-dispatching-service-from-a-single-machine-to-a-distributed-system/</guid>
      <description>At Glovo, we have one vision: Connecting our customers to their cities. We do that by facilitating access to different services (like restaurants, supermarkets, and other stores) through a single mobile application and a fleet of independent couriers.
 Anything you want. Delivered in minutes.
 Of course, that is easier said than done. Behind the scenes, there are hundreds of factors that affect the experience of our customers and couriers.</description>
    </item>
    
    <item>
      <title>Colmena, an Architecture for Highly-Scalable Web Services</title>
      <link>https://larribas.me/posts/colmena-an-architecture-for-highly-scalable-web-services/</link>
      <pubDate>Tue, 06 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://larribas.me/posts/colmena-an-architecture-for-highly-scalable-web-services/</guid>
      <description>About 3 years ago, our startup pivoted from a Q&amp;amp;A app for doctors to an education platform (which we named SchoolHouse.io). It was a big product shift, and we knew many technical changes would follow.
At the time, we had a 1-year-old Python+Django codebase that was already getting rusty and hard to maintain. How did we cross the legacy line so fast?
(sigh)
We were clearly doing something wrong, and we wanted to understand what, so we made a list of our main pain points:</description>
    </item>
    
    <item>
      <title>5 ways to make your codebase withstand the test of time</title>
      <link>https://larribas.me/posts/5-ways-to-make-your-codebase-withstand-the-test-of-time/</link>
      <pubDate>Wed, 17 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://larribas.me/posts/5-ways-to-make-your-codebase-withstand-the-test-of-time/</guid>
      <description>This is the first in a series of articles where @hecrj and I share what we have learned after working on a large, fast-changing codebase for the past 3 years, and being perfectly happy with the result!
 If you are a web developer, you are probably used to having new frameworks, libraries and technologies come out every other week.
 We are on a never-ending quest to find better tools and patterns, but does that mean our code is doomed to become old and wrinkly?</description>
    </item>
    
    <item>
      <title>SchoolHouse.io</title>
      <link>https://larribas.me/projects/schoolhouse-io/</link>
      <pubDate>Wed, 17 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://larribas.me/projects/schoolhouse-io/</guid>
      <description>I am one of the co-founders of SchoolHouse.io, an ed-tech startup that&amp;rsquo;s been on production since late 2016 and now helps hundreds of teachers provide a better experience to their students.
On the technical side, we are a 2-person team (@hecrj and I) who take care of the full stack, from graphical design to deployment and infrastructure monitoring.
Main challenges  Building interactive presentations in real time with WebSocket.</description>
    </item>
    
    <item>
      <title>Colmena</title>
      <link>https://larribas.me/projects/colmena/</link>
      <pubDate>Wed, 10 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://larribas.me/projects/colmena/</guid>
      <description>Around 2015, @hecrj and I were having serious trouble maintaining a Django codebase we had started just one year ago!
We knew we were doing something wrong, and we had serious doubts about MVC as a healthy, long-term architecture for complex applications.
After doing some research and debating a few ideas, we decided to ditch frameworks and experiment with our own system, drawing inspiration from many other patterns we liked, such as the Hexagonal Architecture, Event Sourcing, CQRS, Domain-Driven Design.</description>
    </item>
    
    <item>
      <title>Cualy</title>
      <link>https://larribas.me/projects/cualy/</link>
      <pubDate>Sat, 05 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://larribas.me/projects/cualy/</guid>
      <description>Cualy is a side project I developed and tried to sell in late 2017. The idea behind it is to enable businesses to improve their quality control over products that are not closely monitored (such as vending machines, gym equipment, public spaces, public bikes&amp;hellip;).
Businesses can generate and print stickers with NFC + QR for their products and keep track of them via a simple backoffice.
Main challenges  Making the most lightweight and fast page I could so that users could give feedback almost instantly on any connection.</description>
    </item>
    
    <item>
      <title>SandCapsule</title>
      <link>https://larribas.me/projects/sandcapsule/</link>
      <pubDate>Fri, 10 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://larribas.me/projects/sandcapsule/</guid>
      <description>I developed SandCapsule together with @hecrj back in early 2017 mainly for fun and to give Elm and Haskell (two pure functional languages) a test run (before deciding if we would use them in a more serious project). At first we released it for ourselves, and since then we&amp;rsquo;ve used it to surprise some of our friends and loved ones, make predictions of some games or TV shows, and to send our friends silly messages.</description>
    </item>
    
    <item>
      <title>About me</title>
      <link>https://larribas.me/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://larribas.me/about/</guid>
      <description>I&amp;rsquo;m Lorenzo Arribas, a Software Engineer based in Barcelona, Spain.
Over the past 7 years, I have worked in 2 hypergrowth start-ups and seen them turn into well-established multi-national companies. I&amp;rsquo;ve also ventured into creating my own company for a couple of years.
I like fast-paced environments where I can have an impact and feel like every day is challenging. I try not to stay within my comfort zone. During the last 7 years I&amp;rsquo;ve put frontend applications into production, developed event-driven microservices and set up complex infrastructure topologies.</description>
    </item>
    
  </channel>
</rss>