<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Microservices on Lorenzo Arribas</title>
    <link>https://larribas.me/tags/microservices/</link>
    <description>Recent content in Microservices on Lorenzo Arribas</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 06 Nov 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://larribas.me/tags/microservices/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Colmena, an Architecture for Highly-Scalable Web Services</title>
      <link>https://larribas.me/posts/colmena-an-architecture-for-highly-scalable-web-services/</link>
      <pubDate>Tue, 06 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://larribas.me/posts/colmena-an-architecture-for-highly-scalable-web-services/</guid>
      <description>About 3 years ago, our startup pivoted from a Q&amp;amp;A app for doctors to an education platform (which we named SchoolHouse.io). It was a big product shift, and we knew many technical changes would follow.
At the time, we had a 1-year-old Python+Django codebase that was already getting rusty and hard to maintain. How did we cross the legacy line so fast?
(sigh)
We were clearly doing something wrong, and we wanted to understand what, so we made a list of our main painpoints:</description>
    </item>
    
  </channel>
</rss>