<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>domain-driven-design on Lorenzo Arribas</title>
    <link>https://larribas.me/tags/domain-driven-design/</link>
    <description>Recent content in domain-driven-design on Lorenzo Arribas</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 22 Feb 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://larribas.me/tags/domain-driven-design/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>The identity of a Microservice</title>
      <link>https://larribas.me/posts/the-identity-of-a-microservice/</link>
      <pubDate>Sat, 22 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://larribas.me/posts/the-identity-of-a-microservice/</guid>
      <description>Little boxes on the hillside&amp;hellip;  My current company is undergoing a transition to microservices. This is a new challenge for the company since, until this point, all our processes and tooling revolve around a monolith, shaped by all the decisions we made in the past (the good ones and the bad ones).
The way we decided to start is by migrating one single component into a microservice, and laying down a “golden path” for other services to follow.</description>
    </item>
    
    <item>
      <title>Colmena</title>
      <link>https://larribas.me/projects/colmena/</link>
      <pubDate>Wed, 10 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://larribas.me/projects/colmena/</guid>
      <description>Around 2015, @hecrj and I were having serious trouble maintaining a Django codebase we had started just one year ago!
We knew we were doing something wrong, and we had serious doubts about MVC as a healthy, long-term architecture for complex applications.
After doing some research and debating a few ideas, we decided to ditch frameworks and experiment with our own system, drawing inspiration from many other patterns we liked, such as the Hexagonal Architecture, Event Sourcing, CQRS, Domain-Driven Design.</description>
    </item>
    
  </channel>
</rss>